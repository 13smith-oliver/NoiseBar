{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.15063}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 package my.noisebar;\par
\par
import java.awt.Color;\par
import java.io.ByteArrayOutputStream;\par
import javax.sound.sampled.*;\par
/**\par
 *\par
 * @author Oliver\par
 */\par
public class noiseBarUi extends javax.swing.JFrame \{\par
\par
    /**\par
     * Creates new form noiseBarUi\par
     */\par
    public noiseBarUi() \{\par
        initComponents();\par
    \}\par
\par
    /**\par
     * This method is called from within the constructor to initialize the form.\par
     * WARNING: Do NOT modify this code. The content of this method is always\par
     * regenerated by the Form Editor.\par
     */\par
    @SuppressWarnings("unchecked")\par
    // <editor-fold defaultstate="collapsed" desc="Generated Code">\par
    private void initComponents() \{\par
\par
        redLabel = new javax.swing.JLabel();\par
        orangeLabel = new javax.swing.JLabel();\par
        yellowLabel = new javax.swing.JLabel();\par
        greenLabel = new javax.swing.JLabel();\par
        darkGreenLabel = new javax.swing.JLabel();\par
\par
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\par
        setTitle("Noise Bar");\par
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));\par
        setFocusable(false);\par
        setMaximumSize(new java.awt.Dimension(1000, 5000));\par
        getContentPane().setLayout(new java.awt.GridLayout(5, 0));\par
\par
        redLabel.setBackground(new java.awt.Color(255, 0, 0));\par
        redLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N\par
        redLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\par
        redLabel.setText("Too Loud!");\par
        redLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\par
        redLabel.setMaximumSize(new java.awt.Dimension(200, 1000));\par
        redLabel.setMinimumSize(new java.awt.Dimension(100, 100));\par
        redLabel.setOpaque(true);\par
        redLabel.setPreferredSize(new java.awt.Dimension(100, 100));\par
        getContentPane().add(redLabel);\par
\par
        orangeLabel.setBackground(new java.awt.Color(255, 140, 0));\par
        orangeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N\par
        orangeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\par
        orangeLabel.setText("Loud!");\par
        orangeLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\par
        orangeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));\par
        orangeLabel.setMaximumSize(new java.awt.Dimension(200, 1000));\par
        orangeLabel.setMinimumSize(new java.awt.Dimension(100, 100));\par
        orangeLabel.setOpaque(true);\par
        orangeLabel.setPreferredSize(new java.awt.Dimension(100, 100));\par
        getContentPane().add(orangeLabel);\par
\par
        yellowLabel.setBackground(new java.awt.Color(255, 255, 0));\par
        yellowLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N\par
        yellowLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\par
        yellowLabel.setText("Noisy!");\par
        yellowLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\par
        yellowLabel.setMaximumSize(new java.awt.Dimension(200, 1000));\par
        yellowLabel.setMinimumSize(new java.awt.Dimension(100, 100));\par
        yellowLabel.setOpaque(true);\par
        yellowLabel.setPreferredSize(new java.awt.Dimension(100, 100));\par
        getContentPane().add(yellowLabel);\par
\par
        greenLabel.setBackground(new java.awt.Color(173, 255, 47));\par
        greenLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N\par
        greenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\par
        greenLabel.setText("Okay!");\par
        greenLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\par
        greenLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);\par
        greenLabel.setMaximumSize(new java.awt.Dimension(200, 1000));\par
        greenLabel.setMinimumSize(new java.awt.Dimension(100, 100));\par
        greenLabel.setOpaque(true);\par
        greenLabel.setPreferredSize(new java.awt.Dimension(100, 100));\par
        getContentPane().add(greenLabel);\par
\par
        darkGreenLabel.setBackground(new java.awt.Color(0, 255, 0));\par
        darkGreenLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N\par
        darkGreenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\par
        darkGreenLabel.setText("Very Good!");\par
        darkGreenLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\par
        darkGreenLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);\par
        darkGreenLabel.setMaximumSize(new java.awt.Dimension(200, 1000));\par
        darkGreenLabel.setMinimumSize(new java.awt.Dimension(100, 100));\par
        darkGreenLabel.setOpaque(true);\par
        darkGreenLabel.setPreferredSize(new java.awt.Dimension(100, 100));\par
        getContentPane().add(darkGreenLabel);\par
\par
        pack();\par
        \par
        setVisible(true);\par
    \}// </editor-fold>\par
\par
    /**\par
     * @param args the command line arguments\par
     */\par
    public static void main(String args[]) \{\par
        /* Set the Nimbus look and feel */\par
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">\par
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\par
         * For details see {{\field{\*\fldinst{HYPERLINK http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html }}{\fldrslt{http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html\ul0\cf0}}}}\f0\fs22  \par
         */\par
        try \{\par
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) \{\par
                if ("Nimbus".equals(info.getName())) \{\par
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\par
                    break;\par
                \}\par
            \}\par
        \} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) \{\par
            java.util.logging.Logger.getLogger(noiseBarUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\par
        \}\par
        //</editor-fold>\par
        \par
        //</editor-fold>\par
        AudioFormat format = new AudioFormat(48000, 16, 1, true, true);\par
        TargetDataLine line;\par
        line = null;\par
        DataLine.Info info = new DataLine.Info(TargetDataLine.class, \par
            format); // format is an AudioFormat object\par
        if (!AudioSystem.isLineSupported(info)) \{\par
            System.out.println("line not supported");\par
        \}\par
        \par
        // Obtain and open the line.\par
        try \{\par
            line = (TargetDataLine) AudioSystem.getLine(info);\par
            line.open(format);\par
        \} catch (LineUnavailableException ex) \{\par
            System.out.println("error");\par
        \}\par
        ByteArrayOutputStream out  = new ByteArrayOutputStream();\par
        int numBytesRead;\par
        byte[] data = new byte[line.getBufferSize() * 1];\par
\par
        // Begin audio capture.\par
        line.start();\par
        \par
        noiseBarUi nbu = new noiseBarUi();\par
        \par
        int level = 0;\par
        while (true) \{\par
            numBytesRead =  line.read(data, 0, data.length);\par
            // Save this chunk of data.\par
            out.write(data, 0, numBytesRead);\par
            level = nbu.calculateRMSLevel(data);\par
            nbu.changeColors(level);\par
        \} \par
    \}\par
\par
    // Variables declaration - do not modify                     \par
    private javax.swing.JLabel darkGreenLabel;\par
    private javax.swing.JLabel greenLabel;\par
    private javax.swing.JLabel orangeLabel;\par
    private javax.swing.JLabel redLabel;\par
    private javax.swing.JLabel yellowLabel;\par
    // End of variables declaration                   \par
\par
    public int calculateRMSLevel(byte[] audioData)\par
    \{\par
        long lSum = 0;\par
        for(int i=0; i < audioData.length; i++)\par
            lSum = lSum + audioData[i];\par
        \par
        double dAvg = lSum / audioData.length;\par
        double sumMeanSquare = 0d;\par
        \par
        for(int j=0; j < audioData.length; j++)\par
            sumMeanSquare += Math.pow(audioData[j] - dAvg, 2d);\par
        \par
        double averageMeanSquare = sumMeanSquare / audioData.length;\par
        \par
        return (int)(Math.pow(averageMeanSquare,0.5d) + 0.5);\par
    \}\par
    \par
    private void changeColors(int level) \{\par
        resetColors();\par
        if (level > 65)\{\par
            redLabel.setBackground(new Color(255,0,0));\par
        \}\par
        else if (level > 60 && level <= 65) \{\par
            orangeLabel.setBackground(new Color(255,140,0));\par
        \}\par
        else if (level > 55 && level <= 60) \{\par
            yellowLabel.setBackground(new Color(255,255,0));\par
        \}\par
        else if (level > 50 && level <= 55) \{\par
            greenLabel.setBackground(new Color(173,255,47));\par
        \}\par
        else if (level < 50) \{\par
            darkGreenLabel.setBackground(new Color(0,255,0));\par
        \}\par
    \}\par
    private void resetColors() \{\par
        redLabel.setBackground(new Color(110,110,110));\par
        orangeLabel.setBackground(new Color(110,110,110));\par
        yellowLabel.setBackground(new Color(110,110,110));\par
        greenLabel.setBackground(new Color(110,110,110));\par
        darkGreenLabel.setBackground(new Color(110,110,110));\par
    \}\par
\}\par
}
 